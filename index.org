#+TITLE: Notes about programming tools
#+AUTHOR: Georgios Diapoulis
#+EMAIL: gediapou[at]student[dot]jyu[dot]fi


* About
These are personal notes, if anyone finds this documentation helpful I will be glad too.  I adopt this template from [[http://pages.sachachua.com/.emacs.d/Sacha.html][Sacha Chua]], and it is written in [[http://orgmode.org/][Orgmode]].  You can find the orgmode and html files [[https://github.com/gewhere/gewhere.github.io][here]].

* Github
I am learning how to use github, it's pretty handy, just needs some time and repetitive practice.  The basic steps are below:

** Git locally
You can use git only locally, though one of the main concept behind git and version control systems is that of collaborative coding.

#+BEGIN_SRC sh :results silent
git init 			# initialize a folder .git/
# create a file
touch newfile 			# Ctrl+D to save and exit
git status 			# now newfile is untracked
git add newfile 		# to bring file in the staged level
git commit -m 'Initial commit' 	# to make file ready for push
#+END_SRC

Branching is a core concept for handling big programming projects.

#+BEGIN_SRC sh :results silent
git brach NewBranch    	# creates a new branch
git branch             	# returns the working branch
git checkout NewBranch 	# you are now in the NewBranch
touch newfile          	# create a newfile in the NewBranch
                       	# this file does not exists in the working directory
                       	# unless you 'git merge'
git checkout master    	# the master branch is by default the branch that git initialise
git merge NewBranch    	# at this point the newfile appears
#+END_SRC

** Git publicly
When you =git clone= a repository to your hard disc, you clone this from a /remote/.

#+BEGIN_SRC sh :results silent
git remote 		# this should return 'origin'
git remote -v 		# returns the online repository
git push origin master 	# git asks for credentials
#+END_SRC


** Using Magit
Magit is an emacs package with which you can handle git more interactively.  With following steps you can push your code on github. With =M-x magit-status= magit opens a buffer which tracks your activity.  In this buffer you can see your local path to the working directory, your remotes, and the last commit online (=Head=).

At the top of your files in the magit's buffer there is a button like text region which says either =Unstaged changes= for files that are untracked, either =Staged Changes= for files that are in the staged level, or =Unpushed commits=.
#+BEGIN_EXAMPLE
M-x magit-status
s => to stage
c c => to commit
P P => to push
#+END_EXAMPLE


* Orgmode
|------+------+------+------+------+------+------+------+------+------+------+------+-------|
|   do |  do# |   re |  re# |   mi |   fa |  fa# |   so |  so# |   la |  la# |   ti |       |
|------+------+------+------+------+------+------+------+------+------+------+------+-------|
| 6.35 | 2.23 | 3.48 | 2.33 | 4.38 | 4.09 | 2.52 | 5.19 | 2.39 | 3.66 | 2.29 | 2.88 | 41.79 |
|------+------+------+------+------+------+------+------+------+------+------+------+-------|
#+TBLFM: @>$> = vsum($<..$>>);%.2f
|------+------+------+------+------+------+------+------+------+------+------+------+-------|
|   la |  la# |   ti |   do |  do# |   re |  re# |   mi |   fa |  fa# |   so |  so# |       |
|------+------+------+------+------+------+------+------+------+------+------+------+-------|
| 6.33 | 2.68 | 3.52 | 5.38 | 2.60 | 3.53 | 2.54 | 4.75 | 3.98 | 2.69 | 3.34 | 3.17 | 44.51 |
|------+------+------+------+------+------+------+------+------+------+------+------+-------|
#+TBLFM: @>$> = vsum($<..$>>);%.2f

* Emacs
