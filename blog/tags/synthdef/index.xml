<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Synthdef on Georgios Diapoulis personal blog</title>
    <link>http://gewhere.github.io/blogging/tags/synthdef/</link>
    <description>Recent content in Synthdef on Georgios Diapoulis personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>This work is licensed under a Creative Commons Attribution 3.0 Unported License unless otherwise noted.</copyright>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://gewhere.github.io/blogging/tags/synthdef/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The very firsts step to SC3</title>
      <link>http://gewhere.github.io/blogging/2017/10/30/the-very-firsts-step-to-sc3/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gewhere.github.io/blogging/2017/10/30/the-very-firsts-step-to-sc3/</guid>
      <description>SuperCollider is a powerful programming environment for live music making. It is a textual programming language, combined with a state-of-art sound engine. The basic architecture is based on client-server model, which means that you launch two separate applications, the language (sclang, client) and the sound synthesis engine (scsynth, server). The online help is available at sccode, and the mailing list at nabble.
How to start In order to make some sound, the first step is to launch scsynth.</description>
    </item>
    
    <item>
      <title>Print SynthDef list using SynthDescLib</title>
      <link>http://gewhere.github.io/blogging/2017/10/15/print-synthdef-list-using-synthdesclib/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gewhere.github.io/blogging/2017/10/15/print-synthdef-list-using-synthdesclib/</guid>
      <description>The following code chunks print the full list of the synth defitions (SynthDef) that are loaded in the server. A Synthdef is the client side representation of a synth on the server-side.
SynthDef library // print all the SynthDefs ( SynthDescLib.global.synthDescs.associationsDo { |assoc| var name = assoc.key, code = assoc.value.def.func.def.sourceCode; code.notNil.if { &amp;quot;&amp;quot;.postln; name.post; &amp;quot;: &amp;quot;.postln; code.postln; }; }; &amp;quot;&amp;quot;; ) ( SynthDescLib.global.synthDescs.do { |desc| if(desc.def.notNil) { &amp;quot;\nSynthDef %\n&amp;quot;.postf(desc.name.asCompileString); desc.def.func.postcs; }; }; &amp;quot;&amp;quot; // this prevents the synthDescs collection from posting )  </description>
    </item>
    
  </channel>
</rss>